// 2.	Ввести последовательность натуральных
// чисел {Aj}j=1...n (n<=1000). Упорядочить
// последовательность по неубыванию первой
// цифры числа, числа с одинаковыми первыми
// цифрами дополнительно упорядочить по неубыванию
// суммы цифр числа, числа с одинаковыми первыми
// цифрами и одинаковыми суммами цифр дополнительно
// упорядочить по неубыванию самого числа.

#include <iostream>
#include <fstream>

//Сумма цифр числа
int numSum(int a)
{
    int sum = 0;
    while (a != 0)
    {
        //узнает последнюю цифру числа
        sum += a % 10;
        //убирает последнюю цифру числа
        a /= 10;
    }
    return sum;
}

//Показывает первую цифру в числе
int firstDigit(int number)
{
    int firstDigit;
    do
    {
        firstDigit = number;
        number /= 10;
    } while (number);
    return firstDigit;
}

int main()
{
    const short n = 10;
    int arr[n];
    bool containsFirst1;
    int chislo;

    std::ifstream in("input.txt");
    std::ofstream out("output.txt");

    std::cout << "Before:" << std::endl;

    //Считывает из файла и записывает в массив
    for (int i = 0; i < n; i++)
    {
        in >> arr[i];
        // Пишет массив в консоль
        std::cout << arr[i] << std::endl;
    }

    //Сортирую числа по первому числу
    for (int i = 0; i < n - 1; i++)
    {
        for (int j = i + 1; j < n; j++)
        if (firstDigit(arr[i]) >= firstDigit(arr[j]))
        {
            std::swap(arr[i], arr[j]);
        }
    }

    //Проверяю цифры от 1 до 9
    for (int inum = 1; inum < 10; inum++)
    {
        //Проверяю весь массив на наличие первым нужной цифры
        for (int i = 0; i < n; i++)
        {
            for (int j = i + 1; j < n; j++)
            {
                //Если первая цифра = нужная цифра, то
                if (firstDigit(arr[i] == inum && firstDigit(arr[j]) == inum))
                {
                    //сумму цифр отсортировать.
                    if (numSum(arr[i]) >= numSum(arr[j]))
                    {
                        std::swap(arr[i], arr[j]);
                    }
                }
            }
        }
    }
    //проверяю весь массив
    //for (int i = 0; i < n; i++)
    //{
    //    //на первую цифру 1
    //    for (int inum = 1; inum < 10; i++)
    //    {
    //        if (firstDigit(arr[i] == inum)
    //        {
    //            
    //        }
    //    }
  





    std::cout << "After:" << std::endl;
    // Пишет массив в файл и консоль
    for (int i = 0; i < n; i++)
    {
        out << arr[i] << std::endl;
        std::cout << arr[i] << std::endl;
    }
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
